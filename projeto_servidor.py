# -*- coding: utf-8 -*-
"""Projeto_Servidor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Alg7w3v_QVDyIRdZNvszVuI2RMqMf9va
"""

import numpy as np
import matplotlib.pyplot as plt
plt.style.use('seaborn-whitegrid')
import random
from collections import Counter

Formula = "A = MTBF/(MTBF + MTTR)"
Sites = "https://www.eventhelix.com/fault-handling/system-reliability-availability/ && https://sre.google/sre-book/embracing-risk/"


TotalCentral = []
n = 20
k = 1
p = 0.001

Central = []
for number in range(n):
    Central.append('A')

file = open("TotalCentral.txt", "w") 

countFuncionando = n
ContadorErro = []
#AVAIABLE
#MALFUNCTION
while 'A' in Central:
    if(countFuncionando == k - 1):
        break
    aux = []
    for server in Central:
        if(server == 'A'):
            if(random.uniform(0, 1) > p):
                aux.append('A')
            else:
                aux.append('M')
                countFuncionando -= 1
                ContadorErro.append([len(TotalCentral), countFuncionando])
        else:
            aux.append('M')
    
    Central = aux
    file.write(str(len(TotalCentral)) + ': ' + str(Central) + '\n')
    TotalCentral.append(Counter(Central))
    
np.asarray(ContadorErro)    
print(ContadorErro)



plt.ylabel("Disponibilidade")
plt.xlabel("Verificacoes")
plt.scatter([i[0] for i in ContadorErro], [i[1] for i in ContadorErro])
plt.plot([i[0] for i in ContadorErro], [i[1] for i in ContadorErro], '-o')

plt.rcParams["figure.figsize"] = [16,9]

plt.show()